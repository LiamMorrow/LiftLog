// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using RevenueCat.Client.Projects.Item.Apps;
using RevenueCat.Client.Projects.Item.Customers;
using RevenueCat.Client.Projects.Item.Entitlements;
using RevenueCat.Client.Projects.Item.Metrics;
using RevenueCat.Client.Projects.Item.Offerings;
using RevenueCat.Client.Projects.Item.Packages;
using RevenueCat.Client.Projects.Item.Paywalls;
using RevenueCat.Client.Projects.Item.Products;
using RevenueCat.Client.Projects.Item.Purchases;
using RevenueCat.Client.Projects.Item.Subscriptions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace RevenueCat.Client.Projects.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \projects\{project_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithProject_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The apps property</summary>
        public global::RevenueCat.Client.Projects.Item.Apps.AppsRequestBuilder Apps
        {
            get => new global::RevenueCat.Client.Projects.Item.Apps.AppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customers property</summary>
        public global::RevenueCat.Client.Projects.Item.Customers.CustomersRequestBuilder Customers
        {
            get => new global::RevenueCat.Client.Projects.Item.Customers.CustomersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The entitlements property</summary>
        public global::RevenueCat.Client.Projects.Item.Entitlements.EntitlementsRequestBuilder Entitlements
        {
            get => new global::RevenueCat.Client.Projects.Item.Entitlements.EntitlementsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The metrics property</summary>
        public global::RevenueCat.Client.Projects.Item.Metrics.MetricsRequestBuilder Metrics
        {
            get => new global::RevenueCat.Client.Projects.Item.Metrics.MetricsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The offerings property</summary>
        public global::RevenueCat.Client.Projects.Item.Offerings.OfferingsRequestBuilder Offerings
        {
            get => new global::RevenueCat.Client.Projects.Item.Offerings.OfferingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The packages property</summary>
        public global::RevenueCat.Client.Projects.Item.Packages.PackagesRequestBuilder Packages
        {
            get => new global::RevenueCat.Client.Projects.Item.Packages.PackagesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The paywalls property</summary>
        public global::RevenueCat.Client.Projects.Item.Paywalls.PaywallsRequestBuilder Paywalls
        {
            get => new global::RevenueCat.Client.Projects.Item.Paywalls.PaywallsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public global::RevenueCat.Client.Projects.Item.Products.ProductsRequestBuilder Products
        {
            get => new global::RevenueCat.Client.Projects.Item.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The purchases property</summary>
        public global::RevenueCat.Client.Projects.Item.Purchases.PurchasesRequestBuilder Purchases
        {
            get => new global::RevenueCat.Client.Projects.Item.Purchases.PurchasesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscriptions property</summary>
        public global::RevenueCat.Client.Projects.Item.Subscriptions.SubscriptionsRequestBuilder Subscriptions
        {
            get => new global::RevenueCat.Client.Projects.Item.Subscriptions.SubscriptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Projects.Item.WithProject_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProject_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{project_id}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Projects.Item.WithProject_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProject_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{project_id}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
