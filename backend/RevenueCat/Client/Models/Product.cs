// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace RevenueCat.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Product : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The app property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.App? App { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.App App { get; set; }
#endif
        /// <summary>The id of the app</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppId { get; set; }
#nullable restore
#else
        public string AppId { get; set; }
#endif
        /// <summary>The date when the product was created in ms since epoch</summary>
        public long? CreatedAt { get; set; }
        /// <summary>The display name of the product</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The id of the product</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value. Always has the value `list`.</summary>
        public global::RevenueCat.Client.Models.Product_object? Object { get; set; }
        /// <summary>The one_time property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.OneTimeProduct? OneTime { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.OneTimeProduct OneTime { get; set; }
#endif
        /// <summary>The store product identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreIdentifier { get; set; }
#nullable restore
#else
        public string StoreIdentifier { get; set; }
#endif
        /// <summary>The subscription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.SubscriptionProduct? Subscription { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.SubscriptionProduct Subscription { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::RevenueCat.Client.Models.ProductType? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Models.Product"/> and sets the default values.
        /// </summary>
        public Product()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::RevenueCat.Client.Models.Product"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::RevenueCat.Client.Models.Product CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::RevenueCat.Client.Models.Product();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "app", n => { App = n.GetObjectValue<global::RevenueCat.Client.Models.App>(global::RevenueCat.Client.Models.App.CreateFromDiscriminatorValue); } },
                { "app_id", n => { AppId = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetLongValue(); } },
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::RevenueCat.Client.Models.Product_object>(); } },
                { "one_time", n => { OneTime = n.GetObjectValue<global::RevenueCat.Client.Models.OneTimeProduct>(global::RevenueCat.Client.Models.OneTimeProduct.CreateFromDiscriminatorValue); } },
                { "store_identifier", n => { StoreIdentifier = n.GetStringValue(); } },
                { "subscription", n => { Subscription = n.GetObjectValue<global::RevenueCat.Client.Models.SubscriptionProduct>(global::RevenueCat.Client.Models.SubscriptionProduct.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::RevenueCat.Client.Models.ProductType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::RevenueCat.Client.Models.App>("app", App);
            writer.WriteStringValue("app_id", AppId);
            writer.WriteLongValue("created_at", CreatedAt);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Product_object>("object", Object);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.OneTimeProduct>("one_time", OneTime);
            writer.WriteStringValue("store_identifier", StoreIdentifier);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.SubscriptionProduct>("subscription", Subscription);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.ProductType>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
