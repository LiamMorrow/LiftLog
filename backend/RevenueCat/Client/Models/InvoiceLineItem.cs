// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace RevenueCat.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InvoiceLineItem : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::RevenueCat.Client.Models.InvoiceLineItem_object? Object { get; set; }
        /// <summary>The display name of the product</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductDisplayName { get; set; }
#nullable restore
#else
        public string ProductDisplayName { get; set; }
#endif
        /// <summary>The duration of the subscription in ISO-8601 standard</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductDuration { get; set; }
#nullable restore
#else
        public string ProductDuration { get; set; }
#endif
        /// <summary>The product identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductIdentifier { get; set; }
#nullable restore
#else
        public string ProductIdentifier { get; set; }
#endif
        /// <summary>Total purchased items</summary>
        public int? Quantity { get; set; }
        /// <summary>The unit_amount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.MonetaryAmount? UnitAmount { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.MonetaryAmount UnitAmount { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Models.InvoiceLineItem"/> and sets the default values.
        /// </summary>
        public InvoiceLineItem()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::RevenueCat.Client.Models.InvoiceLineItem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::RevenueCat.Client.Models.InvoiceLineItem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::RevenueCat.Client.Models.InvoiceLineItem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "object", n => { Object = n.GetEnumValue<global::RevenueCat.Client.Models.InvoiceLineItem_object>(); } },
                { "product_display_name", n => { ProductDisplayName = n.GetStringValue(); } },
                { "product_duration", n => { ProductDuration = n.GetStringValue(); } },
                { "product_identifier", n => { ProductIdentifier = n.GetStringValue(); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "unit_amount", n => { UnitAmount = n.GetObjectValue<global::RevenueCat.Client.Models.MonetaryAmount>(global::RevenueCat.Client.Models.MonetaryAmount.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::RevenueCat.Client.Models.InvoiceLineItem_object>("object", Object);
            writer.WriteStringValue("product_display_name", ProductDisplayName);
            writer.WriteStringValue("product_duration", ProductDuration);
            writer.WriteStringValue("product_identifier", ProductIdentifier);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.MonetaryAmount>("unit_amount", UnitAmount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
