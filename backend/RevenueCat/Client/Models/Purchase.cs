// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace RevenueCat.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Purchase : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The country that the object is associated with, in ISO alpha 2 code</summary>
        public global::RevenueCat.Client.Models.Country? Country { get; set; }
        /// <summary>The id of the customer</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerId { get; set; }
#nullable restore
#else
        public string CustomerId { get; set; }
#endif
        /// <summary>The entitlements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.Purchase_entitlements? Entitlements { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.Purchase_entitlements Entitlements { get; set; }
#endif
        /// <summary>The store environment</summary>
        public global::RevenueCat.Client.Models.EnvironmentObject? Environment { get; set; }
        /// <summary>The id of the purchase</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::RevenueCat.Client.Models.Purchase_object? Object { get; set; }
        /// <summary>The ID of the original customer</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginalCustomerId { get; set; }
#nullable restore
#else
        public string OriginalCustomerId { get; set; }
#endif
        /// <summary>Ownership of the purchase</summary>
        public global::RevenueCat.Client.Models.Ownership? Ownership { get; set; }
        /// <summary>The ID of the offering the customer saw when they did the purchase</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PresentedOfferingId { get; set; }
#nullable restore
#else
        public string PresentedOfferingId { get; set; }
#endif
        /// <summary>The ID of the product that was purchased</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductId { get; set; }
#nullable restore
#else
        public string ProductId { get; set; }
#endif
        /// <summary>The date when the purchase was made in ms since epoch</summary>
        public long? PurchasedAt { get; set; }
        /// <summary>The quantity of the product purchased in one transaction</summary>
        public int? Quantity { get; set; }
        /// <summary>The revenue generated by the purchase in USD</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.MonetaryAmount? RevenueInUsd { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.MonetaryAmount RevenueInUsd { get; set; }
#endif
        /// <summary>The status of a purchase</summary>
        public global::RevenueCat.Client.Models.Purchase_status? Status { get; set; }
        /// <summary>Store the purchase belongs to</summary>
        public global::RevenueCat.Client.Models.Purchase_store? Store { get; set; }
        /// <summary>The store purchase identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StorePurchaseIdentifier { get; set; }
#nullable restore
#else
        public string StorePurchaseIdentifier { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Models.Purchase"/> and sets the default values.
        /// </summary>
        public Purchase()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::RevenueCat.Client.Models.Purchase"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::RevenueCat.Client.Models.Purchase CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::RevenueCat.Client.Models.Purchase();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "country", n => { Country = n.GetEnumValue<global::RevenueCat.Client.Models.Country>(); } },
                { "customer_id", n => { CustomerId = n.GetStringValue(); } },
                { "entitlements", n => { Entitlements = n.GetObjectValue<global::RevenueCat.Client.Models.Purchase_entitlements>(global::RevenueCat.Client.Models.Purchase_entitlements.CreateFromDiscriminatorValue); } },
                { "environment", n => { Environment = n.GetEnumValue<global::RevenueCat.Client.Models.EnvironmentObject>(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::RevenueCat.Client.Models.Purchase_object>(); } },
                { "original_customer_id", n => { OriginalCustomerId = n.GetStringValue(); } },
                { "ownership", n => { Ownership = n.GetEnumValue<global::RevenueCat.Client.Models.Ownership>(); } },
                { "presented_offering_id", n => { PresentedOfferingId = n.GetStringValue(); } },
                { "product_id", n => { ProductId = n.GetStringValue(); } },
                { "purchased_at", n => { PurchasedAt = n.GetLongValue(); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "revenue_in_usd", n => { RevenueInUsd = n.GetObjectValue<global::RevenueCat.Client.Models.MonetaryAmount>(global::RevenueCat.Client.Models.MonetaryAmount.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::RevenueCat.Client.Models.Purchase_status>(); } },
                { "store", n => { Store = n.GetEnumValue<global::RevenueCat.Client.Models.Purchase_store>(); } },
                { "store_purchase_identifier", n => { StorePurchaseIdentifier = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Country>("country", Country);
            writer.WriteStringValue("customer_id", CustomerId);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.Purchase_entitlements>("entitlements", Entitlements);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.EnvironmentObject>("environment", Environment);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Purchase_object>("object", Object);
            writer.WriteStringValue("original_customer_id", OriginalCustomerId);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Ownership>("ownership", Ownership);
            writer.WriteStringValue("presented_offering_id", PresentedOfferingId);
            writer.WriteStringValue("product_id", ProductId);
            writer.WriteLongValue("purchased_at", PurchasedAt);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.MonetaryAmount>("revenue_in_usd", RevenueInUsd);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Purchase_status>("status", Status);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Purchase_store>("store", Store);
            writer.WriteStringValue("store_purchase_identifier", StorePurchaseIdentifier);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
