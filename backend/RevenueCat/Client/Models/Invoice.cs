// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace RevenueCat.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Invoice : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The id of the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>URL to download the invoice pdf</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceUrl { get; set; }
#nullable restore
#else
        public string InvoiceUrl { get; set; }
#endif
        /// <summary>The date when the invoiced was issued in ms since epoch</summary>
        public long? IssuedAt { get; set; }
        /// <summary>List of line items that are part of the invoice. Each line item represents a product that was purchased.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::RevenueCat.Client.Models.InvoiceLineItem>? LineItems { get; set; }
#nullable restore
#else
        public List<global::RevenueCat.Client.Models.InvoiceLineItem> LineItems { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::RevenueCat.Client.Models.Invoice_object? Object { get; set; }
        /// <summary>The date when the invoiced was paid in ms since epoch</summary>
        public long? PaidAt { get; set; }
        /// <summary>The total_amount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.MonetaryAmount? TotalAmount { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.MonetaryAmount TotalAmount { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Models.Invoice"/> and sets the default values.
        /// </summary>
        public Invoice()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::RevenueCat.Client.Models.Invoice"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::RevenueCat.Client.Models.Invoice CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::RevenueCat.Client.Models.Invoice();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "id", n => { Id = n.GetStringValue(); } },
                { "invoice_url", n => { InvoiceUrl = n.GetStringValue(); } },
                { "issued_at", n => { IssuedAt = n.GetLongValue(); } },
                { "line_items", n => { LineItems = n.GetCollectionOfObjectValues<global::RevenueCat.Client.Models.InvoiceLineItem>(global::RevenueCat.Client.Models.InvoiceLineItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "object", n => { Object = n.GetEnumValue<global::RevenueCat.Client.Models.Invoice_object>(); } },
                { "paid_at", n => { PaidAt = n.GetLongValue(); } },
                { "total_amount", n => { TotalAmount = n.GetObjectValue<global::RevenueCat.Client.Models.MonetaryAmount>(global::RevenueCat.Client.Models.MonetaryAmount.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("invoice_url", InvoiceUrl);
            writer.WriteLongValue("issued_at", IssuedAt);
            writer.WriteCollectionOfObjectValues<global::RevenueCat.Client.Models.InvoiceLineItem>("line_items", LineItems);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Invoice_object>("object", Object);
            writer.WriteLongValue("paid_at", PaidAt);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.MonetaryAmount>("total_amount", TotalAmount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
