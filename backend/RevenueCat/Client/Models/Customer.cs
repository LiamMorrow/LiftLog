// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace RevenueCat.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Customer : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The active_entitlements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.ListCustomerActiveEntitlements? ActiveEntitlements { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.ListCustomerActiveEntitlements ActiveEntitlements { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The attributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.ListCustomerAttributes? Attributes { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.ListCustomerAttributes Attributes { get; set; }
#endif
        /// <summary>The experiment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.ExperimentEnrollment? Experiment { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.ExperimentEnrollment Experiment { get; set; }
#endif
        /// <summary>The first time the customer was seen</summary>
        public long? FirstSeenAt { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The last app version the customer was seen on</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeenAppVersion { get; set; }
#nullable restore
#else
        public string LastSeenAppVersion { get; set; }
#endif
        /// <summary>The last time the customer was seen</summary>
        public long? LastSeenAt { get; set; }
        /// <summary>The last country the customer was seen in</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeenCountry { get; set; }
#nullable restore
#else
        public string LastSeenCountry { get; set; }
#endif
        /// <summary>The last platform the customer was seen on</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeenPlatform { get; set; }
#nullable restore
#else
        public string LastSeenPlatform { get; set; }
#endif
        /// <summary>The last platform version the customer was seen on</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastSeenPlatformVersion { get; set; }
#nullable restore
#else
        public string LastSeenPlatformVersion { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::RevenueCat.Client.Models.Customer_object? Object { get; set; }
        /// <summary>ID of the project to which the customer belongs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Models.Customer"/> and sets the default values.
        /// </summary>
        public Customer()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::RevenueCat.Client.Models.Customer"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::RevenueCat.Client.Models.Customer CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::RevenueCat.Client.Models.Customer();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_entitlements", n => { ActiveEntitlements = n.GetObjectValue<global::RevenueCat.Client.Models.ListCustomerActiveEntitlements>(global::RevenueCat.Client.Models.ListCustomerActiveEntitlements.CreateFromDiscriminatorValue); } },
                { "attributes", n => { Attributes = n.GetObjectValue<global::RevenueCat.Client.Models.ListCustomerAttributes>(global::RevenueCat.Client.Models.ListCustomerAttributes.CreateFromDiscriminatorValue); } },
                { "experiment", n => { Experiment = n.GetObjectValue<global::RevenueCat.Client.Models.ExperimentEnrollment>(global::RevenueCat.Client.Models.ExperimentEnrollment.CreateFromDiscriminatorValue); } },
                { "first_seen_at", n => { FirstSeenAt = n.GetLongValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "last_seen_app_version", n => { LastSeenAppVersion = n.GetStringValue(); } },
                { "last_seen_at", n => { LastSeenAt = n.GetLongValue(); } },
                { "last_seen_country", n => { LastSeenCountry = n.GetStringValue(); } },
                { "last_seen_platform", n => { LastSeenPlatform = n.GetStringValue(); } },
                { "last_seen_platform_version", n => { LastSeenPlatformVersion = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::RevenueCat.Client.Models.Customer_object>(); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::RevenueCat.Client.Models.ListCustomerActiveEntitlements>("active_entitlements", ActiveEntitlements);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.ListCustomerAttributes>("attributes", Attributes);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.ExperimentEnrollment>("experiment", Experiment);
            writer.WriteLongValue("first_seen_at", FirstSeenAt);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("last_seen_app_version", LastSeenAppVersion);
            writer.WriteLongValue("last_seen_at", LastSeenAt);
            writer.WriteStringValue("last_seen_country", LastSeenCountry);
            writer.WriteStringValue("last_seen_platform", LastSeenPlatform);
            writer.WriteStringValue("last_seen_platform_version", LastSeenPlatformVersion);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Customer_object>("object", Object);
            writer.WriteStringValue("project_id", ProjectId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
