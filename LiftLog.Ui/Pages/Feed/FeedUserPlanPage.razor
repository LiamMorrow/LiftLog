@using Fluxor;

@page "/feed/user-plan/{UserIdStr}"

@inject IJSRuntime JSRuntime
@inject IState<FeedState> FeedState
@inject IState<ProgramState> ProgramState
@inject NavigationManager NavigationManager
@inject IDispatcher Dispatcher

@inherits Fluxor.Blazor.Web.Components.FluxorComponent


<div class="flex flex-col gap-4">
    <CardList Items="plan">
        <SessionSummaryTitle Session="context.GetEmptySession()" IsFilled="false"/>
        <SessionSummary Session="context.GetEmptySession()" ShowSets="true" ShowWeight="false"/>
    </CardList>
    <div>
        <AppButton OnClick="() => importPlanDialog?.Open()"><md-icon slot="icon">assignment</md-icon>Import their plan</AppButton>
    </div>
</div>

@if (user != null)
{
    <Dialog @ref="importPlanDialog">

        <span slot="headline">Import their plan</span>
        <span slot="content" class="block text-left">This will import <span class="font-bold text-primary">@(user.DisplayName)'s</span> plan.  It will not overwrite your existing plan.</span>
        <div slot="actions">
            <AppButton Type="AppButtonType.Text" OnClick=@(() => importPlanDialog?.Close())>Cancel</AppButton>
            <AppButton Type="AppButtonType.Text" OnClick=ImportPlan>Import</AppButton>
        </div>
    </Dialog>
}

@code
{
    [Parameter] public string UserIdStr { get; set; } = null!;

    private Dialog? importPlanDialog;

    private FeedUser? user;

    private ImmutableListValue<SessionBlueprint> plan = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new SetPageTitleAction("User Plan"));
        Dispatcher.Dispatch(new SetBackNavigationUrlAction("/feed"));
        if (!Guid.TryParse(UserIdStr, out var userId) || !FeedState.Value.FollowedUsers.TryGetValue(userId, out user))
        {
            NavigationManager.NavigateTo("/feed");
        }
        else
        {
            Dispatcher.Dispatch(new SetPageTitleAction($"{user.DisplayName}'s Plan"));
            plan = user.CurrentPlan;
        }
    }

    private async void ImportPlan()
    {
        var planId = Guid.NewGuid();
        Dispatcher.Dispatch(new CreateSavedPlanAction(planId, $"{user?.DisplayName}'s Plan"));
        Dispatcher.Dispatch(new SetProgramSessionsAction(planId, plan));
        await importPlanDialog!.CloseWait();
        Dispatcher.Dispatch(new NavigateAction("/settings/program-list?FocusPlanId="+planId));
    }

}
