@page "/settings"
@using Fluxor
@using LiftLog.Ui.Services
@using LiftLog.Ui.Store.App
@using LiftLog.Ui.Store.Settings

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IDispatcher Dispatcher

<md-list class="text-start">
    <ListTitle Title="Configuration" />
    <md-list-item type="button" multi-line-supporting-text @onclick="NavigateToProgramList">
        <md-icon slot="start">assignment</md-icon>
        <span slot="headline" >@UiStrings.ManagePlans</span>
        <span slot="supporting-text">@UiStrings.ManagePlansSubtitle</span>
    </md-list-item>

    <md-list-item type="button" multi-line-supporting-text @onclick="NavigateToAppConfiguration">
        <md-icon slot="start">settings</md-icon>
        <span slot="headline" >@UiStrings.AppConfiguration</span>
        <span slot="supporting-text">@UiStrings.AppConfigurationSubtitle</span>
    </md-list-item>

    <md-list-item type="button" multi-line-supporting-text @onclick="NavigateToNotifications">
        <md-icon slot="start">notifications</md-icon>
        <span slot="headline" >@UiStrings.Notifications</span>
        <span slot="supporting-text">@UiStrings.NotificationsSubtitle</span>
    </md-list-item>

    <md-list-item type="button" multi-line-supporting-text @onclick="NavigateToBackupAndRestore">
        <md-icon slot="start">settings_backup_restore</md-icon>
        <span slot="headline" >@UiStrings.ExportBackupRestore</span>
        <span slot="supporting-text">@UiStrings.ExportBackupRestoreSubtitle</span>
    </md-list-item>
</md-list>
<ProFeatures/>
<md-list class="text-start">
    <ListTitle Title="Support" />
    <md-list-item type="button" multi-line-supporting-text @onclick=@(OpenUrl("https://github.com/LiamMorrow/LiftLog/issues/new?assignees=&labels=enhancement&projects=&template=feature_request.md"))>
        <md-icon slot="start">star</md-icon>
        <span slot="headline" >@UiStrings.FeatureRequest</span>
        <span slot="supporting-text">@UiStrings.FeatureRequestSubtitle</span>
    </md-list-item>
    <md-list-item type="button" multi-line-supporting-text @onclick=@(OpenUrl("https://github.com/LiamMorrow/LiftLog/issues/new?assignees=&labels=bug&projects=&template=bug_report.md"))>
        <md-icon slot="start">bug_report</md-icon>
        <span slot="headline" >@UiStrings.BugReport</span>
        <span slot="supporting-text">@UiStrings.BugReportSubtitle</span>
    </md-list-item>
    <md-list-item type="button" multi-line-supporting-text @onclick=@(OpenUrl("https://github.com/LiamMorrow/LiftLog/issues/new?assignees=&labels=translation&projects=&template=translation-suggestion.md"))>
        <md-icon slot="start">translate</md-icon>
        <span slot="headline" >@UiStrings.Translation</span>
        <span slot="supporting-text">@UiStrings.TranslationSubtitle</span>
    </md-list-item>

    <md-list-item type="button" multi-line-supporting-text @onclick="ShowAppInfo">
        <md-icon slot="start">info</md-icon>
        <span slot="headline" >@UiStrings.AppInfo</span>
        <span slot="supporting-text">@UiStrings.AppInfoSubtitle</span>
    </md-list-item>

</md-list>


<Dialog @ref="appInfoDialog" type="alert">
    <span slot="headline">@UiStrings.AppInfo</span>
    <span slot="content" class="block text-start">
        LiftLog is an entirely open source app, licensed under the AGPL-3.0 license. You can find the source code on <a class="underline text-primary font-bold" href="https://github.com/LiamMorrow/LiftLog" @onclick=@(OpenUrl("https://github.com/LiamMorrow/LiftLog"))>GitHub</a>.
    </span>
    <div slot="actions">
        <AppButton Type="AppButtonType.Text" OnClick="() => { appInfoDialog?.Close(); }">@UiStrings.Close</AppButton>
    </div>
</Dialog>

@code {

    private Dialog? appInfoDialog;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new SetPageTitleAction(UiStrings.Settings));
        Dispatcher.Dispatch(new SetBackNavigationUrlAction(null));
    }

    private void NavigateToBackupAndRestore()
    {
        Dispatcher.Dispatch(new NavigateAction("/settings/backup-and-restore"));
    }

    private void NavigateToProgramList()
    {
        Dispatcher.Dispatch(new NavigateAction("/settings/program-list"));
    }

    private void NavigateToAppConfiguration()
    {
        Dispatcher.Dispatch(new NavigateAction("/settings/app-config"));
    }

    private void NavigateToNotifications()
    {
        Dispatcher.Dispatch(new NavigateAction("/settings/notifications"));
    }

    private void ShowAppInfo()
    {
        appInfoDialog?.Open();
    }

    private Action OpenUrl(string url)
    {
        return () => Dispatcher.Dispatch(new OpenExternalUrlAction(url));
    }
}
