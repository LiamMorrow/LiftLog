@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IState<SettingsState> SettingsState
@inject IDispatcher Dispatcher

<Dialog @ref="dialog" @ondialog-cancel="No" type="alert">
    <span slot="headline">@UiStrings.BackUpData</span>
    <span slot="content" class="block text-start">
        @UiStrings.BackUpDataReminder
    </span>
    <div slot="actions">
        <AppButton Type="AppButtonType.Text" OnClick="DontAsk">@UiStrings.DontAskAgain</AppButton>
        <AppButton Type="AppButtonType.Text" OnClick="No">@UiStrings.No</AppButton>
        <AppButton Type="AppButtonType.Text" OnClick="BackUp">@UiStrings.Yes</AppButton>
    </div>
</Dialog>

@code {
    private Dialog? dialog;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            var lastBackupTime = SettingsState.Value.LastBackupTime;
            var timeSinceLastBackup = DateTimeOffset.Now - lastBackupTime;
            if (SettingsState.Value.BackupReminder && timeSinceLastBackup.TotalDays > 7)
            {
                dialog?.Open();
            }
        }
    }

    private void DontAsk()
    {
        Dispatcher.Dispatch(new SetBackupReminderAction(false));
        dialog?.Close();
    }

    private void No()
    {
        dialog?.Close();
    }

    private async Task BackUp()
    {
        await dialog!.CloseWait();
        Dispatcher.Dispatch(new NavigateAction("/settings/backup-and-restore?backup=true"));
    }
}
