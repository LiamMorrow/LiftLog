<div class="flex gap-4">
    <span>
        You can tap and hold on any set's rep counter to select a different number of reps, or to clear it<br/>
        <span class="text-primary font-bold">Try it now!</span>
    </span>
    <div>
        <PotentialSetCounter
            Set="set"
            ShowWeight="false"
            MaxReps="8"
            WeightIncrement="0.25m"
            OnTap="@(() => CycleRepCountForSet())"
            OnHold="@(() => ShowDialog())"
            OnUpdateWeight="@((_) => { })"
            ToStartNext="@(set.Set is null)"
            IsReadonly=false />
    </div>
</div>

<Dialog @ref="setAdditionalActionsDialog" PreventCancel=true>
        <span slot="headline" class="select-none">Select Reps</span>
        <span slot="content" >
        <PotentialSetAdditionalActions
            Set="set"
            MaxReps=8
            OnSelectRepCount="@((reps)=>{SetRepCount(reps);setAdditionalActionsDialog?.Close();})"
            OnDeleteSet=@(()=>{})></PotentialSetAdditionalActions>
        </span>
        <div slot="actions">
            <AppButton Type="AppButtonType.Text" OnClick="@(() => setAdditionalActionsDialog?.Close())">Cancel</AppButton>
        </div>
</Dialog>

@code{
    private PotentialSet set = new PotentialSet(new RecordedSet(8, DateOnly.FromDateTime(DateTime.Now), TimeOnly.MinValue), 10m);
    private Dialog? setAdditionalActionsDialog;

    private void CycleRepCountForSet()
    {
        set = set with
        {
            Set = set.Set switch
            {
                // When unset - we say the user completed all reps
                null => new RecordedSet(8, DateOnly.FromDateTime(DateTime.Now), TimeOnly.FromDateTime(DateTime.Now)),
                // When they completed no reps, we transition back to unset
                { RepsCompleted: 0 } => null,
                // Otherwise, just decrement from the current
                var reps => reps with { RepsCompleted = reps.RepsCompleted - 1 }
            }
        };
        StateHasChanged();
    }

    private void SetRepCount(int? reps)
    {
        set = reps is null
            ? set with { Set = null }
            : set with { Set = new RecordedSet(reps.Value, DateOnly.FromDateTime(DateTime.Now), TimeOnly.FromDateTime(DateTime.Now)) };
        StateHasChanged();
    }

    private void ShowDialog()
    {
        setAdditionalActionsDialog?.Open();
        StateHasChanged();
    }


}
