@inject IStringSharer StringSharer
@inject IState<FeedState> FeedState

@if (FeedState.Value.Identity is not null)
{
    <TextField Value="@GetShareUrl()" label="@UiStrings.ShareLink" readonly="readonly" OnClick="HandleShareUrlClick"/>
    <span class="text-sm text-on-surface mt-1">@UiStrings.OnlyThoseWithTheLinkCanSee</span>
}

@code {

    private string? GetShareUrl()
    {
        if (FeedState.Value.Identity == null)
            return null;
        var identity = FeedState.Value.Identity;
        return GetShareUrl(identity.Lookup, identity.Name);
    }

    private async Task HandleShareUrlClick()
    {
        var shareUrl = GetShareUrl();
        if (shareUrl == null)
            return;
        await StringSharer.ShareAsync(shareUrl);
    }

    public static string GetShareUrl(string id, string? name) =>
#if DEBUG
        $"https://0.0.0.0:5001/feed/share?id={id}{(name is null ? "" : $"&name={Uri.EscapeDataString(name)}")}";
#else
        $"https://app.liftlog.online/feed/share?id={id}{(name is null ? "" : $"&name={Uri.EscapeDataString(name)}")}";
#endif
}
