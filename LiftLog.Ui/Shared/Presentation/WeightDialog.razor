<Dialog
    @ref="dialog"
    style="--md-dialog-container-max-block-size: 500px;">
    <span slot="headline">@(Label ?? UiStrings.Weight)</span>
    <div slot="content">
        <div class="flex flex-col gap-2">
            <TextField data-cy="weight-input" label="@(Label ?? UiStrings.Weight)" required="@(!AllowNull)" suffix-text="@WeightSuffix" TextFieldType="TextFieldType.Outlined" Value="@(EditorWeight.ToString())" OnChange="HandleInputChange" type="text" inputmode="decimal" step="@NonZeroIncrement"/>
            <div class="flex justify-between">
                <AppButton data-cy="decrement-weight" Type="AppButtonType.OutlineSecondary" OnClick="OnWeightDecrementClick">
                    <md-icon slot="icon">remove</md-icon><WeightFormat Weight="NonZeroIncrement"/>
                </AppButton>
                <AppButton autofocus data-cy="increment-weight" Type="AppButtonType.OutlineSecondary" OnClick="OnWeightIncrementClick">
                    <md-icon slot="icon">add</md-icon><WeightFormat Weight="NonZeroIncrement"/>
                </AppButton>
            </div>
        </div>
    </div>
    <div slot="actions" class="flex gap-1">
        <AppButton dialog-action="close" OnClick="OnCloseClick" Type="AppButtonType.Text">@UiStrings.Close</AppButton>
        <AppButton dialog-action="save" dialog-focus OnClick="OnSaveClick" Type="AppButtonType.Text">@UiStrings.Save</AppButton>
    </div>
</Dialog>

@code
{

    private Dialog? dialog;

    [EditorRequired] [Parameter] public decimal? Weight { get; set; } = null!;

    [Parameter] public string? Label { get; set; }

    [EditorRequired] [Parameter] public decimal Increment { get; set; } = 2.5m;

    [EditorRequired] [Parameter] public Action<decimal?> UpdateWeight { get; set; } = null!;

    [Parameter] public bool AllowNull { get; set; } = false;

    [CascadingParameter(Name = "UseImperial")]
    public bool UseImperialUnits { get; set; }

    public void Open()
    {
        EditorWeight = Weight;
        dialog?.Open();
    }

    private decimal NonZeroIncrement => Increment == 0 ? 2.5m : Increment;

    private decimal? EditorWeight { get; set; }

    private string WeightSuffix => UseImperialUnits ? "lbs" : "kg";


    private void OnCloseClick()
    {
        dialog?.Close();
    }

    private void OnSaveClick()
    {
        UpdateWeight(EditorWeight);
        dialog?.Close();
    }

    private void OnWeightIncrementClick()
    {
        EditorWeight += NonZeroIncrement;
    }

    private void OnWeightDecrementClick()
    {
        EditorWeight -= NonZeroIncrement;
    }

    private void HandleInputChange(string? value)
    {
        if (string.IsNullOrWhiteSpace(value) && AllowNull)
        {
            EditorWeight = null;
            StateHasChanged();
            return;
        }

        if (decimal.TryParse(value, out var result))
        {
            EditorWeight = result;
            StateHasChanged();
        }
    }
}
