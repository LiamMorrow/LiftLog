@inject IJSRuntime JSRuntime
<md-list-item type="button" class="text-start" @onclick="()=>OnSwitched.InvokeAsync(!Value)" >
        <span slot="headline" >@Headline</span>
        <span slot="supporting-text" >@SupportingText</span>
    <md-switch slot="end" @attributes="AdditionalAttributes" @ref="_switchRef" @onchange="HandleInput" selected="@Value"></md-switch>
</md-list-item>

@code{

    private ElementReference _switchRef;

    [EditorRequired] [Parameter] public string Headline { get; set; } = null!;
    [Parameter] public string? SupportingText { get; set; }

    [Parameter] [EditorRequired] public bool Value { get; set; }

    [Parameter] [EditorRequired] public EventCallback<bool> OnSwitched { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }

    private async Task HandleInput()
    {
        await Task.Yield();
        var selected = await JSRuntime.InvokeAsync<bool>("AppUtils.getSelected", _switchRef);
        await OnSwitched.InvokeAsync(selected);
    }

}
