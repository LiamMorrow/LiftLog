// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace RevenueCat.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Entitlement : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The date when the entitlement was created in ms since epoch</summary>
        public long? CreatedAt { get; set; }
        /// <summary>The display name of the entitlement</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The id of the entitlement</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>A custom identifier of the entitlement</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LookupKey { get; set; }
#nullable restore
#else
        public string LookupKey { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::RevenueCat.Client.Models.Entitlement_object? Object { get; set; }
        /// <summary>List of products attached to the entitlement</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::RevenueCat.Client.Models.Entitlement_products? Products { get; set; }
#nullable restore
#else
        public global::RevenueCat.Client.Models.Entitlement_products Products { get; set; }
#endif
        /// <summary>ID of the project to which the entitlement belongs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::RevenueCat.Client.Models.Entitlement"/> and sets the default values.
        /// </summary>
        public Entitlement()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::RevenueCat.Client.Models.Entitlement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::RevenueCat.Client.Models.Entitlement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::RevenueCat.Client.Models.Entitlement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetLongValue(); } },
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "lookup_key", n => { LookupKey = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::RevenueCat.Client.Models.Entitlement_object>(); } },
                { "products", n => { Products = n.GetObjectValue<global::RevenueCat.Client.Models.Entitlement_products>(global::RevenueCat.Client.Models.Entitlement_products.CreateFromDiscriminatorValue); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("created_at", CreatedAt);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("lookup_key", LookupKey);
            writer.WriteEnumValue<global::RevenueCat.Client.Models.Entitlement_object>("object", Object);
            writer.WriteObjectValue<global::RevenueCat.Client.Models.Entitlement_products>("products", Products);
            writer.WriteStringValue("project_id", ProjectId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
